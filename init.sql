CREATE SEQUENCE ARTICLE_ID_SEQ INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;
CREATE SEQUENCE MEMBER_ID_SEQ INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;
CREATE SEQUENCE COMMENT_ID_SEQ INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;
CREATE SEQUENCE CREATER_ID_SEQ INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;
CREATE SEQUENCE SCRAP_ID_SEQ INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1;

CREATE TABLE ARTICLE
(
    ARTICLE_ID          INTEGER NOT NULL DEFAULT nextval('article_id_seq' :: regclass),
    TITLE               TEXT NOT NULL,
    PLACE               TEXT,
    CONTENTS            TEXT,
    START_DATE          TEXT,
    END_DATE            TEXT,
    CREATED_AT          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          BIGINT,
    MODIFIED_AT         TIMESTAMP WITHOUT TIME ZONE,
    STATUS              VARCHAR(64),
    TOTAL_RECRUIT       INTEGER,
    CONSTRAINT ARTCILE_PK PRIMARY KEY (ARTICLE_ID)

);
CREATE TABLE MEMBER
(
    MEMBER_ID           INTEGER NOT NULL DEFAULT nextval('member_id_seq' :: regclass),
    JOIN_USER_ID        BIGINT NOT NULL,
    ARTICLE_ID          INTEGER NOT NULL,
    CONSTRAINT MEMBER_PK PRIMARY KEY (MEMBER_ID),
    CONSTRAINT MEMBER_FK FOREIGN KEY (ARTICLE_ID)
    REFERENCES ARTICLE (ARTICLE_ID) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE COMMENT
(
    COMMENT_ID          INTEGER NOT NULL DEFAULT nextval('comment_id_seq' :: regclass),
    CREATED_AT          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATOR_ID          BIGINT,
    MODIFIED_AT         TIMESTAMP WITHOUT TIME ZONE,
    CONTENTS            TEXT NOT NULL,
    PARENT_ID           INTEGER,
    CHILD_ID            INTEGER,
    ARTICLE_ID          INTEGER,
    CONSTRAINT COMMENT_PK PRIMARY KEY (COMMENT_ID),
    CONSTRAINT COMMENT_FK1 FOREIGN KEY (ARTICLE_ID)
    REFERENCES ARTICLE (ARTICLE_ID) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);


CREATE TABLE SCRAP
(
    SCRAP_ID            INTEGER NOT NULL DEFAULT nextval('scrap_id_seq' :: regclass),
    SCRAP_USER_ID       BIGINT,
    ARTICLE_ID          INTEGER,
    CONSTRAINT SCRAP_PK PRIMARY KEY (SCRAP_ID)
);
INSERT INTO public.user_entity(
	id, create_date, email, password, provider, provider_id, role, username, picture)
	VALUES (2, now(), 'khkim@naver.com', 'asdf1234!', 'kakao', 'kakaoid', 'admin', '김경환','this is picture');